definitions:
  entity.Artikel:
    properties:
      gambar:
        type: string
      id:
        type: integer
      isi:
        type: string
      jenis:
        type: string
      judul:
        type: string
    type: object
  entity.IMT:
    properties:
      id:
        type: integer
      nama:
        type: string
    type: object
  entity.JadwalMakanan:
    properties:
      id:
        type: integer
      id_resep:
        type: integer
      tanggal:
        type: string
      waktu:
        type: string
    type: object
  entity.Olahraga:
    properties:
      deskripsi:
        type: string
      id:
        type: integer
      nama:
        type: string
    type: object
  entity.ProfilKesehatan:
    properties:
      berat_badan:
        type: integer
      golongan_darah:
        type: string
      id:
        type: integer
      tensi:
        type: string
      tinggi_badan:
        type: integer
    type: object
  entity.ResepMakanan:
    properties:
      bahan:
        type: string
      durasi:
        type: integer
      id:
        type: integer
      kalori:
        type: integer
      langkah:
        type: string
      nama:
        type: string
      persiapan:
        type: string
      porsi:
        type: integer
    type: object
  entity.User:
    properties:
      email:
        type: string
      id:
        type: integer
      id_imt:
        type: integer
      id_kesehatan:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
host: localhost:8888
info:
  contact: {}
  description: This is Fits Health API
  title: Fits Health API Documentation
  version: "2.0"
paths:
  /artikel:
    get:
      consumes:
      - application/json
      description: User can Get Information article about health that posting by admin
        or developer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Artikel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Artikel'
      security:
      - JWT: []
      summary: Get All Artikel Information
      tags:
      - Artikel
    post:
      consumes:
      - application/json
      description: Developer can Create Article about healthy, disease, and many more
      parameters:
      - description: required
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.Artikel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Artikel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Artikel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.Artikel'
      security:
      - JWT: []
      summary: Create Article
      tags:
      - Artikel
  /artikel/{id}:
    delete:
      consumes:
      - application/json
      description: Developer can Delete Article Information if they want to delete
        it
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Artikel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Artikel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.Artikel'
      security:
      - JWT: []
      summary: Delete Artikel
      tags:
      - Artikel
    get:
      consumes:
      - application/json
      description: User can get Article Information by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Artikel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Artikel'
      security:
      - JWT: []
      summary: Get Article Information by ID
      tags:
      - Artikel
    put:
      consumes:
      - application/json
      description: Developer can update about article information that if the information
        article is wrong
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Artikel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Artikel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.Artikel'
      security:
      - JWT: []
      summary: Update Artikel
      tags:
      - Artikel
  /imt:
    get:
      consumes:
      - application/json
      description: From IMT information, user can measure itself by knowing what type
        of body he/she get from weight and height
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.IMT'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.IMT'
      security:
      - JWT: []
      summary: Get All IMT Information
      tags:
      - IMT
    post:
      consumes:
      - application/json
      description: IMT is for User that categorizing user body by weight and height
      parameters:
      - description: required
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.IMT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.IMT'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.IMT'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.IMT'
      security:
      - JWT: []
      summary: Create IMT for User
      tags:
      - IMT
  /imt/{id}:
    delete:
      consumes:
      - application/json
      description: Developer can Delete IMT Information if IMT information is wrong
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.IMT'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.IMT'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.IMT'
      security:
      - JWT: []
      summary: Delete IMT
      tags:
      - IMT
    get:
      consumes:
      - application/json
      description: User can get IMT Information by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.IMT'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.IMT'
      security:
      - JWT: []
      summary: Get IMT Information by ID
      tags:
      - IMT
    put:
      consumes:
      - application/json
      description: Developer can update about IMT information
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.IMT'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.IMT'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.IMT'
      security:
      - JWT: []
      summary: Update IMT
      tags:
      - IMT
  /jadwal-makanan:
    get:
      consumes:
      - application/json
      description: User can get their food schedule information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.JadwalMakanan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.JadwalMakanan'
      security:
      - JWT: []
      summary: Get All Food Schedule Information in User
      tags:
      - JadwalMakanan
    post:
      consumes:
      - application/json
      description: User can create Food Schedule everyday in their life
      parameters:
      - description: required
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.JadwalMakanan'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.JadwalMakanan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.JadwalMakanan'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.JadwalMakanan'
      security:
      - JWT: []
      summary: Create Food Schedule
      tags:
      - JadwalMakanan
  /jadwal-makanan/{id}:
    delete:
      consumes:
      - application/json
      description: Developer can Delete Food Schedule Information if they don't like
        about their food schedule that they created
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.JadwalMakanan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.JadwalMakanan'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.JadwalMakanan'
      security:
      - JWT: []
      summary: Delete Food Schedule
      tags:
      - JadwalMakanan
    get:
      consumes:
      - application/json
      description: User can get Food Schedule Information by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.JadwalMakanan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.JadwalMakanan'
      security:
      - JWT: []
      summary: Get Food Schedule Information by ID
      tags:
      - JadwalMakanan
    put:
      consumes:
      - application/json
      description: User can update about Food Schedule if their schdule got wrong
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.JadwalMakanan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.JadwalMakanan'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.JadwalMakanan'
      security:
      - JWT: []
      summary: Update Food Schedule
      tags:
      - JadwalMakanan
  /login:
    post:
      consumes:
      - application/json
      description: Login User
      parameters:
      - description: required
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entity.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.User'
      summary: Login User
      tags:
      - User
  /olahraga:
    get:
      consumes:
      - application/json
      description: User can get information about all workout that can do it in home
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Olahraga'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Olahraga'
      security:
      - JWT: []
      summary: Get All Workout Information
      tags:
      - Olahraga
    post:
      consumes:
      - application/json
      description: Developer can create workout for User
      parameters:
      - description: required
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.Olahraga'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Olahraga'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Olahraga'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.Olahraga'
      security:
      - JWT: []
      summary: Create Workout
      tags:
      - Olahraga
  /olahraga/{id}:
    delete:
      consumes:
      - application/json
      description: Developer can Delete Workout Information if workout information
        is useless
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Olahraga'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Olahraga'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.Olahraga'
      security:
      - JWT: []
      summary: Delete Workout
      tags:
      - Olahraga
    get:
      consumes:
      - application/json
      description: User can get Workout Information by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Olahraga'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Olahraga'
      security:
      - JWT: []
      summary: Get Workout Information by ID
      tags:
      - Olahraga
    put:
      consumes:
      - application/json
      description: Developer can update about workout information
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Olahraga'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Olahraga'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.Olahraga'
      security:
      - JWT: []
      summary: Update Olahraga
      tags:
      - Olahraga
  /profil-kesehatan:
    get:
      consumes:
      - application/json
      description: Developer can get all health information from user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ProfilKesehatan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ProfilKesehatan'
      security:
      - JWT: []
      summary: Get All Health Information for developer
      tags:
      - ProfilKesehatan
    post:
      consumes:
      - application/json
      description: Health Information is about user personal health information
      parameters:
      - description: required
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.ProfilKesehatan'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ProfilKesehatan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ProfilKesehatan'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.ProfilKesehatan'
      security:
      - JWT: []
      summary: Create Health Information for user
      tags:
      - ProfilKesehatan
  /profil-kesehatan/{id}:
    delete:
      consumes:
      - application/json
      description: Developer can Delete Health Information if Health information is
        wrong
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ProfilKesehatan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ProfilKesehatan'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.ProfilKesehatan'
      security:
      - JWT: []
      summary: Delete Health Information
      tags:
      - ProfilKesehatan
    get:
      consumes:
      - application/json
      description: Developer and User can get Health Information by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ProfilKesehatan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ProfilKesehatan'
      security:
      - JWT: []
      summary: Get Health Information by ID
      tags:
      - ProfilKesehatan
    put:
      consumes:
      - application/json
      description: User can update about Health information
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ProfilKesehatan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ProfilKesehatan'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.ProfilKesehatan'
      security:
      - JWT: []
      summary: Update Health Information
      tags:
      - ProfilKesehatan
  /register:
    post:
      consumes:
      - application/json
      description: People can Register as a User
      parameters:
      - description: required
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.User'
      summary: Register User
      tags:
      - User
  /resep-makanan:
    get:
      consumes:
      - application/json
      description: User can get information about food recipe that can be useful in
        their life
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResepMakanan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ResepMakanan'
      security:
      - JWT: []
      summary: Get All Food Recipe Information
      tags:
      - ResepMakanan
    post:
      consumes:
      - application/json
      description: Food Recipe is for user that user can use the food recipe for cooking
        or for food schedule
      parameters:
      - description: required
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.ResepMakanan'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResepMakanan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ResepMakanan'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.ResepMakanan'
      security:
      - JWT: []
      summary: Create Food Recipe for User
      tags:
      - ResepMakanan
  /resep-makanan/{id}:
    delete:
      consumes:
      - application/json
      description: Developer can Delete Food Recipe Information if Food Recipe information
        is useless
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResepMakanan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ResepMakanan'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.ResepMakanan'
      security:
      - JWT: []
      summary: Delete Food Recipe
      tags:
      - ResepMakanan
    get:
      consumes:
      - application/json
      description: User can get Food Recipe Information by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResepMakanan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ResepMakanan'
      security:
      - JWT: []
      summary: Get IMT Food Recipe by ID
      tags:
      - ResepMakanan
    put:
      consumes:
      - application/json
      description: Developer can update about food recipe information if the information
        about food recipe is wrong
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResepMakanan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ResepMakanan'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.ResepMakanan'
      security:
      - JWT: []
      summary: Update Food Recipe
      tags:
      - ResepMakanan
  /users:
    get:
      consumes:
      - application/json
      description: Get ALl User
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.User'
      security:
      - JWT: []
      summary: Get All User
      tags:
      - User
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: User can Delete their own account
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.User'
      security:
      - JWT: []
      summary: Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: User Can Get User Information By Id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.User'
      security:
      - JWT: []
      summary: Get User By Id
      tags:
      - User
    put:
      consumes:
      - application/json
      description: User can Update their status or information
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.User'
      security:
      - JWT: []
      summary: Update User
      tags:
      - User
schemes:
- http
- https
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
